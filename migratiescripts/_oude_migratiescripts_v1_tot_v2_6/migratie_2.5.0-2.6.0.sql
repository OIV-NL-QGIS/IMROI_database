SET role oiv_admin;
SET search_path = objecten, pg_catalog, public;

--Opnieuw aanmaken van bag_extent i.v.m. toevoeging ligplaatsen
DROP TABLE algemeen.bag_extent CASCADE;
CREATE TABLE algemeen.bag_extent 
( 
    gid             serial primary key,
    identificatie   character varying(16),
    pandstatus          text,
    geovlak         geometry(PolygonZ, 28992),
    gebruiksdoel    text
);
-- Let op volg nu eerste de volgende stappen
-- import de nieuwe bag_extent tabel (download via Bitbucket)
-- via psql plugin in pgAdmin
-- gebruik het volgende commando
-- \copy algemeen.bag_extent FROM 'c:/pad_naar_bestand/bestandsnaam.csv' DELIMITER ',' CSV ENCODING 'UTF-8'
-- pas het pad en de bestandsnaam aan
-- denk erom er mogen geen spaties in de pad verwijzing staan
 
CREATE OR REPLACE VIEW objecten.view_objectgegevens AS 
 SELECT object.id,
    object.formelenaam,
    object.geom,
    object.pand_id,
    object.datum_aangemaakt,
    object.datum_gewijzigd,
    object.laagstebouw,
    object.hoogstebouw,
        CASE
            WHEN object.bhvaanwezig = true THEN 'ja'::text
            ELSE 'nee'::text
        END AS bhvaanwezig,
    object.bijzonderheden,
    object.pers_max,
    object.pers_nietz_max,
    ob.naam AS bouwconstructie,
    b.gebruiksdoel,
    round(st_x(object.geom)) AS x,
    round(st_y(object.geom)) AS y
   FROM objecten.object
     LEFT JOIN objecten.historie ON historie.id = (( SELECT historie_1.id
           FROM objecten.historie historie_1
          WHERE historie_1.object_id = object.id
          ORDER BY historie_1.datum_aangemaakt DESC
         LIMIT 1))
     LEFT JOIN objecten.object_bouwconstructie ob ON object.object_bouwconstructie_id = ob.id
     LEFT JOIN algemeen.bag_extent b ON object.pand_id::text = b.identificatie
  WHERE historie.historie_status_id = 2;

CREATE TABLE objecten.gt_pk_metadata_table
(
  table_schema character varying(32) NOT NULL,
  table_name character varying(32) NOT NULL,
  pk_column character varying(32) NOT NULL,
  pk_column_idx integer,
  pk_policy character varying(32),
  pk_sequence character varying(64),
  CONSTRAINT gt_pk_metadata_table_table_schema_table_name_pk_column_key UNIQUE (table_schema, table_name, pk_column),
  CONSTRAINT gt_pk_metadata_table_pk_policy_check CHECK (pk_policy::text = ANY (ARRAY['sequence'::character varying::text, 'assigned'::character varying::text, 'autogenerated'::character varying::text]))
);

INSERT INTO objecten.gt_pk_metadata_table (table_schema, table_name, pk_column, pk_column_idx, pk_policy)
        VALUES ('objecten', 'view_objectgegevens', 'id', 1, 'assigned');
INSERT INTO objecten.gt_pk_metadata_table (table_schema, table_name, pk_column, pk_column_idx, pk_policy)
        VALUES ('objecten', 'view_bouwlagen', 'id', 1, 'assigned');
INSERT INTO objecten.gt_pk_metadata_table (table_schema, table_name, pk_column, pk_column_idx, pk_policy)
        VALUES ('objecten', 'view_gevaarlijkestof', 'id', 1, 'assigned');
INSERT INTO objecten.gt_pk_metadata_table (table_schema, table_name, pk_column, pk_column_idx, pk_policy)
        VALUES ('objecten', 'view_labels', 'id', 1, 'assigned');
INSERT INTO objecten.gt_pk_metadata_table (table_schema, table_name, pk_column, pk_column_idx, pk_policy)
        VALUES ('objecten', 'view_object_aanw_pers', 'id', 1, 'assigned');
INSERT INTO objecten.gt_pk_metadata_table (table_schema, table_name, pk_column, pk_column_idx, pk_policy)
        VALUES ('objecten', 'view_pictogram_zonder_object', 'id', 1, 'assigned');
INSERT INTO objecten.gt_pk_metadata_table (table_schema, table_name, pk_column, pk_column_idx, pk_policy)
        VALUES ('objecten', 'view_pictogrammen', 'id', 1, 'assigned');
INSERT INTO objecten.gt_pk_metadata_table (table_schema, table_name, pk_column, pk_column_idx, pk_policy)
        VALUES ('objecten', 'view_schade_cirkel', 'id', 1, 'assigned');
INSERT INTO objecten.gt_pk_metadata_table (table_schema, table_name, pk_column, pk_column_idx, pk_policy)
        VALUES ('objecten', 'view_scheidingen', 'id', 1, 'assigned');
INSERT INTO objecten.gt_pk_metadata_table (table_schema, table_name, pk_column, pk_column_idx, pk_policy)
        VALUES ('objecten', 'view_vlakken', 'id', 1, 'assigned');

-- Update versie van de applicatie
UPDATE algemeen.applicatie SET sub = 6;
UPDATE algemeen.applicatie SET revisie = 0;
UPDATE algemeen.applicatie SET db_versie = 260; -- db versie == versie_sub_revisie
UPDATE algemeen.applicatie SET datum = now();