SET ROLE oiv_admin;

DROP SCHEMA IF EXISTS algemeen CASCADE;

CREATE SCHEMA algemeen;
COMMENT ON SCHEMA algemeen IS 'OIV algemeen';

GRANT USAGE ON SCHEMA algemeen TO GROUP oiv_read;

SET search_path = algemeen, pg_catalog, public;

CREATE TYPE lijnstijl_type AS ENUM ('no', 'solid', 'dash', 'dot', 'dash dot', 'dash dot dot');
CREATE TYPE vulstijl_type AS ENUM ('solid', 'horizontal', 'vertical', 'cross', 'b_diagonal', 'f_diagonal', 'diagonal_x', 'dense1', 'dense2', 'dense3', 'dense4', 'dense5', 'dense6', 'dense7', 'no');
CREATE TYPE verbindingsstijl_type AS ENUM ('bevel', 'miter', 'round');
CREATE TYPE eindstijl_type AS ENUM ('square', 'flat', 'round');

CREATE DOMAIN emailadres AS CHARACTER VARYING(254)
CHECK (((VALUE) :: TEXT ~ '[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$' :: TEXT));

CREATE TABLE applicatie
(
  id   SMALLINT PRIMARY KEY NOT NULL,
  versie SMALLINT,
  sub SMALLINT,
  revisie SMALLINT,
  omschrijving TEXT,
  datum   TIMESTAMP WITH TIME ZONE DEFAULT now(),
  db_versie SMALLINT
);

CREATE UNIQUE INDEX applicatie_idx ON applicatie((1));

CREATE TABLE veiligheidsregio
(
  id   INTEGER PRIMARY KEY NOT NULL,
  geom GEOMETRY(MULTIPOLYGON, 28992),
  statcode TEXT NOT NULL UNIQUE,
  statnaam TEXT,
  rubriek TEXT
);

CREATE TABLE team
(
  id       SERIAL PRIMARY KEY NOT NULL,
  statcode TEXT            NOT NULL,
  naam     VARCHAR(255)       NOT NULL,
  email    emailadres,
  geom	    geometry(MultiPolygon, 28992),
  CONSTRAINT team_statcode_fk FOREIGN KEY (statcode) REFERENCES veiligheidsregio (statcode)
);

CREATE TABLE teamlid
(
  id         SERIAL PRIMARY KEY NOT NULL,
  team_id    INTEGER            NOT NULL,
  login      VARCHAR(255)       NOT NULL,
  wachtwoord VARCHAR(255),
  naam       VARCHAR,
  email      emailadres,
  CONSTRAINT gebruiker_team_id_fk FOREIGN KEY (team_id) REFERENCES team (id)
);

CREATE TABLE bag_extent
(
  gid serial NOT NULL,
  identificatie text,
  status text,
  geovlak geometry(MultiPolygon,28992),
  gebruiksdoel text,
  bron character varying(10),
  bron_tbl character varying(254),
  CONSTRAINT bag_extent_pkey PRIMARY KEY (gid)
);

CREATE INDEX sidx_bag_extent_geom
  ON bag_extent
  USING gist
  (geovlak);

CREATE TABLE bgt_extent
(
  gid serial NOT NULL,
  identificatie character varying,
  geovlak geometry(CurvePolygon,28992),
  lokaalid character varying,
  bron_tbl character varying(254),
  bron character varying(10),
  CONSTRAINT bgt_extent_pkey PRIMARY KEY (gid)
);
COMMENT ON COLUMN bgt_extent.identificatie IS 'gml_id vanuit BGT';

CREATE INDEX sidx_bgt_extent_geom
  ON bgt_extent
  USING gist
  (geovlak);

CREATE OR REPLACE VIEW veiligheidsregio_huidig AS 
 SELECT veiligheidsregio.id,
    veiligheidsregio.geom,
    veiligheidsregio.statcode,
    veiligheidsregio.statnaam,
    veiligheidsregio.rubriek
   FROM veiligheidsregio
  WHERE veiligheidsregio.statcode = 'VR10'::text;

CREATE INDEX sidx_veiligheidsregio_geom
  ON veiligheidsregio
  USING gist
  (geom);

CREATE TABLE veiligheidsregio_watergrenzen
(
  id integer NOT NULL,
  geom geometry(MultiPolygon,28992),
  code character varying,
  naam character varying,
  CONSTRAINT veiligheidsregio_watergrens_pkey PRIMARY KEY (id),
  CONSTRAINT veiligheidsregio_code_key UNIQUE (code)
);

CREATE INDEX sidx_veiligheidsregio_watergrens_geom
  ON veiligheidsregio_watergrenzen
  USING gist
  (geom);
  
CREATE TABLE gemeente_zonder_wtr (
    id bigint NOT NULL,
    geom geometry(MultiPolygon,28992),
    objectid bigint,
    gml_id character varying(254),
    code character varying(6),
    gemeentena character varying(30),
    shape_leng double precision,
    shape_le_1 double precision,
    shape_area double precision,
    inpoly_fid bigint,
    simpgnflag integer,
    maxsimptol double precision,
    minsimptol double precision
);
CREATE INDEX sidx_gemeente_geom
  ON gemeente_zonder_wtr
  USING gist
  (geom);

ALTER TABLE ONLY gemeente_zonder_wtr
    ADD CONSTRAINT gemeente_zonder_wtr_pkey PRIMARY KEY (id);

CREATE TABLE gt_pk_metadata_table
(
  table_schema  CHARACTER VARYING(32) NOT NULL,
  table_name    CHARACTER VARYING(32) NOT NULL,
  pk_column     CHARACTER VARYING(32) NOT NULL,
  pk_column_idx INTEGER,
  pk_policy     CHARACTER VARYING(32),
  pk_sequence   CHARACTER VARYING(64),
  CONSTRAINT gt_pk_metadata_table_table_schema_table_name_pk_column_key UNIQUE (table_schema, table_name, pk_column),
  CONSTRAINT gt_pk_metadata_table_pk_policy_check CHECK (pk_policy :: TEXT = ANY
                                                         (ARRAY ['sequence' :: CHARACTER VARYING, 'assigned' :: CHARACTER VARYING, 'autogenerated' :: CHARACTER VARYING] :: TEXT []))
);

CREATE TABLE fotografie
(
  id             SERIAL PRIMARY KEY NOT NULL,
  geom           GEOMETRY(POINT, 28992) NOT NULL,
  datum_aangemaakt TIMESTAMP WITH TIME ZONE DEFAULT now(),
  datum_gewijzigd   TIMESTAMP WITH TIME ZONE,
  uitgesloten BOOLEAN DEFAULT FALSE,
  src           TEXT NOT NULL,
  exif           JSON,
  datum          VARCHAR(255),
  rd_x           NUMERIC,
  rd_y           NUMERIC,
  bestand           VARCHAR(255),
  fotograaf      VARCHAR(255),
  omschrijving   TEXT,
  bijzonderheden TEXT
);
CREATE INDEX sidx_fotografie_geom
  ON algemeen.fotografie
  USING gist
  (geom);
COMMENT ON TABLE fotografie IS 'Algemene fotografie tabel';

CREATE OR REPLACE VIEW algemeen.fotografie_cogo AS 
 SELECT id,
    geom,
    src,
    exif::TEXT,
    datum as datetime,
    bestand as filename,
    fotograaf,
    omschrijving,
    bijzonderheden
   FROM fotografie
   WHERE uitgesloten != TRUE;

CREATE OR REPLACE RULE fotografie_cogo_del AS
ON DELETE TO fotografie_cogo DO INSTEAD
UPDATE fotografie set uitgesloten = TRUE WHERE old.id = id
RETURNING 
    id,
    geom,
    src,
    exif::TEXT,
    datum,
    bestand,
    fotograaf,
    omschrijving,
    bijzonderheden;

CREATE OR REPLACE RULE fotografie_cogo_ins AS
ON INSERT TO fotografie_cogo DO INSTEAD
  INSERT INTO fotografie (
    geom,
    src,
    exif,
    datum,
    rd_x,
    rd_y,
    bestand,
    fotograaf,
    omschrijving,
    bijzonderheden
  )
  VALUES (
    new.geom,
    new.src,
   new.exif::JSON,
    new.datetime,
    ST_X(new.geom),
    ST_Y(new.geom),
    new.filename,
    new.fotograaf,
    new.omschrijving,
    new.bijzonderheden)
RETURNING 
    id,
    geom,
    src,
    exif::TEXT,
    datum,
    bestand,
    fotograaf,
    omschrijving,
    bijzonderheden;

CREATE OR REPLACE RULE fotografie_cogo_upd AS
ON UPDATE TO fotografie_cogo DO INSTEAD
UPDATE fotografie set 
datum_gewijzigd = now(),
geom =    new.geom,
src =    new.src,
exif =    new.exif::JSON,
datum  =  new.datetime,
rd_x  =  ST_X(new.geom),
rd_y =    ST_Y(new.geom),
bestand =    new.filename,
fotograaf =    new.fotograaf,
omschrijving =    new.omschrijving,
bijzonderheden =    new.bijzonderheden
WHERE new.id = id
RETURNING 
    id,
    geom,
    src,
    exif::TEXT,
    datum,
    bestand,
    fotograaf,
    omschrijving,
    bijzonderheden;

CREATE TABLE styles
(
  id serial primary key,
  laagnaam VARCHAR(100),
  soortnaam VARCHAR(100) UNIQUE,
  lijndikte decimal,
  lijnkleur VARCHAR(9),
  lijnstijl lijnstijl_type,
  vulkleur VARCHAR(9),
  vulstijl vulstijl_type,
  verbindingsstijl verbindingsstijl_type,
  eindstijl eindstijl_type
);

CREATE TABLE styles_symbols_type
(
  naam TEXT PRIMARY KEY,
  size INTEGER,
  symbol_name TEXT
);
  
REVOKE ALL ON TABLE applicatie FROM GROUP oiv_write;
REVOKE ALL ON TABLE veiligheidsregio FROM GROUP oiv_write;
REVOKE ALL ON TABLE teamlid FROM GROUP oiv_write;
REVOKE ALL ON TABLE team FROM GROUP oiv_write;
REVOKE ALL ON TABLE veiligheidsregio_huidig FROM GROUP oiv_write;
REVOKE ALL ON TABLE styles FROM GROUP oiv_write;